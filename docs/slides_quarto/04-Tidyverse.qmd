---
title: "Tidyverse"
subtitle: 'R code gets easier and more readable'
date: "`r info$date`"
author: "`r info$author`"
format: 
  revealjs:
    logo: /img/ZEIF.png
    scrollable: true
    theme: [style.scss]
    footer: "JÃ¼rgen Wilbert - Introduction to R"
title-slide-attributes:
    data-background-color: "#a9bfd1"
---

```{r setup, include=FALSE}
opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, comment= "")
```

## Goals {background-image="img/DEFOCUSED.png"}

- You know what **tidyverse** is.
- Basic knowledge on the pipe `%>%` operator.

# Tidyverse

## Tidyverse is a collection of R packages developed for data science

<img src="img/tidyverse_components.png"/>

---

- [**tidyverse**](https://www.tidyverse.org/) was initiated (and is to a large part programmed) by [Hadley Wickham](http://hadley.nz/).

::: incremental

- It is continuously developed and heavily promoted by RStudio.
- The core idea is to implement (more) [*functional programming*](https://en.wikipedia.org/wiki/Functional_programming) into R.
- All packages share an underlying design philosophy, grammar, and data structure.
- Although **tidyverse** is *loved* by many, there are also critics to it [worth reading](https://github.com/matloff/TidyverseSkeptic/blob/master/README.md).
- Tidyverse can be installed through R (install.packages("tidyverse")).
:::

# Pipes: `%>%` {.build}

## An Example:

%>% takes the return of a function and **pipes** it to the next function.

```{r eval = FALSE}
# Without pipes (nested option):
kable(round(describe(select(dat, "iq", "age")), 2))

# or a second, better, alternative:
newdat <- select(dat, "iq", "age")
newdat <- describe(newdat)
newdat <- round(newdat, 2)
kable(newdat)
```
<br>
```{r eval = FALSE}
# And with pipes it looks like:
dat %>%
  select("iq", "age") %>%
  describe() %>%
  round(2) %>%
  kable()
```

## Task

- Take the `mtcars` data set (included in base R).
- Apply the `describe()` function from the `psych` library (make sure you have installed `psych`).
- Round the values to the first decimal (Note: `round()` is your friend here).
- Use pipes `%>%` to do this all.
- ... and don't forget to activate the `tidyverse` library :-)

{{< include _stop.qmd >}}

##

```{r eval = FALSE}
library(psych)
library(tidyverse)

mtcars %>%
  describe() %>%
  round(1)
```

```{r echo = FALSE, message=FALSE, warning=FALSE}
library(psych)

mtcars %>%
  describe() %>%
  round(1) %>%
  html_table()
```

