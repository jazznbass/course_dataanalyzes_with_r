{
  "hash": "76c40b05a42f7830c22f1dd9e1779ffa",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Create new variables in data frames\"\nformat: revealjs\n---\n\n\n\n## Create a new variable in a dataset with missing values\n\nPlease copy this syntax into R-Studio and execute:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstudy <- data.frame(\n  sen    = factor(c(0, 1, 0, 1, 0, 1), labels = c(\"no sen\", \"sen\"), levels = 0:1),\n  gender = factor(c(1,2,2,1,2,1), labels = c(\"Male\", \"Female\"), levels = 1:2),\n  age  = c(150, 156, 138, 126, 136, 162),\n  IQ     = c(90, 85, 90, 87, 99, 89),\n  Q1     = c(1, 5, 3, 4, 2, 3),\n  Q2     = c(2, 5, 3, 4, 5, 2),\n  Q3     = c(1, 5, 3, 5, 2, 1)\n)\n```\n:::\n\n\n\n## Create a new variable in a dataset {.smaller}\n\nWith missing values:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstudy$Q4 <- NA\n```\n:::\n\n\n\nWith specific values:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstudy$Q5 <- c(5, 1, 4, 2, 1, 3)\nstudy\n```\n\n::: {.cell-output-display}\n<div class=\"kable-table\">\n\n|sen    |gender | age| IQ| Q1| Q2| Q3|Q4 | Q5|\n|:------|:------|---:|--:|--:|--:|--:|:--|--:|\n|no sen |Male   | 150| 90|  1|  2|  1|NA |  5|\n|sen    |Female | 156| 85|  5|  5|  5|NA |  1|\n|no sen |Female | 138| 90|  3|  3|  3|NA |  4|\n|sen    |Male   | 126| 87|  4|  4|  5|NA |  2|\n|no sen |Female | 136| 99|  2|  5|  2|NA |  1|\n|sen    |Male   | 162| 89|  3|  2|  1|NA |  3|\n\n</div>\n:::\n:::\n\n\n\n## Create new variables from existing ones\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstudy$age2 <- study$age / 12\nstudy\n```\n\n::: {.cell-output-display}\n<div class=\"kable-table\">\n\n|sen    |gender | age| IQ| Q1| Q2| Q3|Q4 | Q5|     age2|\n|:------|:------|---:|--:|--:|--:|--:|:--|--:|--------:|\n|no sen |Male   | 150| 90|  1|  2|  1|NA |  5| 12.50000|\n|sen    |Female | 156| 85|  5|  5|  5|NA |  1| 13.00000|\n|no sen |Female | 138| 90|  3|  3|  3|NA |  4| 11.50000|\n|sen    |Male   | 126| 87|  4|  4|  5|NA |  2| 10.50000|\n|no sen |Female | 136| 99|  2|  5|  2|NA |  1| 11.33333|\n|sen    |Male   | 162| 89|  3|  2|  1|NA |  3| 13.50000|\n\n</div>\n:::\n:::\n\n\n\n## Drop a variable\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstudy$age2 <- NULL\nstudy\n```\n\n::: {.cell-output-display}\n<div class=\"kable-table\">\n\n|sen    |gender | age| IQ| Q1| Q2| Q3|Q4 | Q5|\n|:------|:------|---:|--:|--:|--:|--:|:--|--:|\n|no sen |Male   | 150| 90|  1|  2|  1|NA |  5|\n|sen    |Female | 156| 85|  5|  5|  5|NA |  1|\n|no sen |Female | 138| 90|  3|  3|  3|NA |  4|\n|sen    |Male   | 126| 87|  4|  4|  5|NA |  2|\n|no sen |Female | 136| 99|  2|  5|  2|NA |  1|\n|sen    |Male   | 162| 89|  3|  2|  1|NA |  3|\n\n</div>\n:::\n\n```{.r .cell-code}\n# or: study <- subset(study, select = -age2)\n# or: study <- study[, -10]\n```\n:::\n\n\n\n## Task\n\nCreate a new variable `Q_sum_1_3` as the sum of `Q1` to `Q3`.\n\n\n\n[**:-)**]{style=\"color: red;\"}\n\n\n\n---\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstudy$Q_sum_1_3 <- with(study, Q1 + Q2 + Q3)\n\n# or:\n\nstudy$Q_sum_1_3 <- study$Q1 + study$Q2 + study$Q3\nstudy\n```\n\n::: {.cell-output-display}\n<div class=\"kable-table\">\n\n|sen    |gender | age| IQ| Q1| Q2| Q3|Q4 | Q5| Q_sum_1_3|\n|:------|:------|---:|--:|--:|--:|--:|:--|--:|---------:|\n|no sen |Male   | 150| 90|  1|  2|  1|NA |  5|         4|\n|sen    |Female | 156| 85|  5|  5|  5|NA |  1|        15|\n|no sen |Female | 138| 90|  3|  3|  3|NA |  4|         9|\n|sen    |Male   | 126| 87|  4|  4|  5|NA |  2|        13|\n|no sen |Female | 136| 99|  2|  5|  2|NA |  1|         9|\n|sen    |Male   | 162| 89|  3|  2|  1|NA |  3|         6|\n\n</div>\n:::\n:::\n\n\n\n## Task\n\nCreate the variables `age_year` and `age_month` where both variables do not have decimals \n\n(tip: `trunc` function or the `%%` modulo operator and the integer division `%/%` operator. Use the help function if needed)\n\n\n\n[**:-)**]{style=\"color: red;\"}\n\n\n\n---\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstudy$age_year <- trunc(study$age /12)\nstudy$age_month <- study$age - (study$age_year * 12)\n\n# or\n\nstudy$age_year <- study$age %/% 12\nstudy$age_month <- study$age %% 12\n\nstudy\n```\n\n::: {.cell-output-display}\n<div class=\"kable-table\">\n\n|sen    |gender | age| IQ| Q1| Q2| Q3|Q4 | Q5| Q_sum_1_3| age_year| age_month|\n|:------|:------|---:|--:|--:|--:|--:|:--|--:|---------:|--------:|---------:|\n|no sen |Male   | 150| 90|  1|  2|  1|NA |  5|         4|       12|         6|\n|sen    |Female | 156| 85|  5|  5|  5|NA |  1|        15|       13|         0|\n|no sen |Female | 138| 90|  3|  3|  3|NA |  4|         9|       11|         6|\n|sen    |Male   | 126| 87|  4|  4|  5|NA |  2|        13|       10|         6|\n|no sen |Female | 136| 99|  2|  5|  2|NA |  1|         9|       11|         4|\n|sen    |Male   | 162| 89|  3|  2|  1|NA |  3|         6|       13|         6|\n\n</div>\n:::\n:::\n\n\n\n## The apply function {.smaller}\n\nThe `apply` function applies a function to every row or column of a data frame.\n\n1. The first argument is the data frame object.\n\n2. The second argument is the margin (1 for rows and 2 for columns).\n\n3. The third argument is a function name (e.g. mean).\n\n4. Further arguments are arguments to the function provided in 3.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# An example:\nstudy$Q_sum_1_2 <- apply(study[, c(\"Q1\", \"Q2\")], 1, sum)\nstudy\n```\n\n::: {.cell-output-display}\n<div class=\"kable-table\">\n\n|sen    |gender | age| IQ| Q1| Q2| Q3|Q4 | Q5| Q_sum_1_3| age_year| age_month| Q_sum_1_2|\n|:------|:------|---:|--:|--:|--:|--:|:--|--:|---------:|--------:|---------:|---------:|\n|no sen |Male   | 150| 90|  1|  2|  1|NA |  5|         4|       12|         6|         3|\n|sen    |Female | 156| 85|  5|  5|  5|NA |  1|        15|       13|         0|        10|\n|no sen |Female | 138| 90|  3|  3|  3|NA |  4|         9|       11|         6|         6|\n|sen    |Male   | 126| 87|  4|  4|  5|NA |  2|        13|       10|         6|         8|\n|no sen |Female | 136| 99|  2|  5|  2|NA |  1|         9|       11|         4|         7|\n|sen    |Male   | 162| 89|  3|  2|  1|NA |  3|         6|       13|         6|         5|\n\n</div>\n:::\n:::\n\n\n\n## Task\n\nCreate a new variable `Q_sum` with the sum of Q1 to Q5 (sums should be build when NAs are in the data)\n\n---\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstudy$Q_sum <- apply(subset(study, select = Q1:Q5), 1, sum, na.rm = TRUE)\n```\n:::\n",
    "supporting": [
      "02c-Create_new_variables_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}