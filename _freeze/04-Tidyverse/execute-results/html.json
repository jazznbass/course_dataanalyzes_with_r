{
  "hash": "b36a6dd2057a4c50de6db54c237f9be3",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Tidyverse\"\nsubtitle: 'R code gets easier and more readable'\nformat: revealjs\n---\n\n\n\n## Goals\n\n- You know what **tidyverse** is.\n- Basic knowledge on the pipe `%>%` operator.\n\n# Tidyverse {background-image=\"images/bg-h1-3.jpg\"}\n\n## Tidyverse is a collection of R packages developed for data science\n\n<img src=\"images/tidyverse_components.png\"/>\n\n---\n\n- [**tidyverse**](https://www.tidyverse.org/) was initiated (and is to a large part programmed) by [Hadley Wickham](http://hadley.nz/).\n\n::: incremental\n\n- It is continuously developed and heavily promoted by RStudio.\n- The core idea is to implement (more) [*functional programming*](https://en.wikipedia.org/wiki/Functional_programming) into R.\n- All packages share an underlying design philosophy, grammar, and data structure.\n- Although **tidyverse** is *loved* by many, there are also critics to it [worth reading](https://github.com/matloff/TidyverseSkeptic/blob/master/README.md).\n- Tidyverse can be installed through R (install.packages(\"tidyverse\")).\n:::\n\n# Pipes: `%>%`  {background-image=\"images/bg-h1-3.jpg\"}\n\n## An Example:\n\n%>% takes the return of a function and **pipes** it to the next function.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Without pipes (nested option):\nkable(round(describe(select(dat, \"iq\", \"age\")), 2))\n\n# or a second, better, alternative:\nnewdat <- select(dat, \"iq\", \"age\")\nnewdat <- describe(newdat)\nnewdat <- round(newdat, 2)\nkable(newdat)\n```\n:::\n\n<br>\n\n::: {.cell}\n\n```{.r .cell-code}\n# And with pipes it looks like:\ndat %>%\n  select(\"iq\", \"age\") %>%\n  describe() %>%\n  round(2) %>%\n  kable()\n```\n:::\n\n\n## Task\n\n- Take the `mtcars` data set (included in base R).\n- Apply the `describe()` function from the `psych` library (make sure you have installed `psych`).\n- Round the values to the first decimal (Note: `round()` is your friend here).\n- Use pipes `%>%` to do this all.\n- ... and don't forget to activate the `tidyverse` library :-)\n\n\n[**:-)**]{style=\"color: red;\"}\n\n\n##\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(psych)\nlibrary(tidyverse)\n\nmtcars %>%\n  describe() %>%\n  round(1)\n```\n:::\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n\n|     | vars|  n|  mean|    sd| median| trimmed|   mad|  min|   max| range| skew| kurtosis|   se|\n|:----|----:|--:|-----:|-----:|------:|-------:|-----:|----:|-----:|-----:|----:|--------:|----:|\n|mpg  |    1| 32|  20.1|   6.0|   19.2|    19.7|   5.4| 10.4|  33.9|  23.5|  0.6|     -0.4|  1.1|\n|cyl  |    2| 32|   6.2|   1.8|    6.0|     6.2|   3.0|  4.0|   8.0|   4.0| -0.2|     -1.8|  0.3|\n|disp |    3| 32| 230.7| 123.9|  196.3|   222.5| 140.5| 71.1| 472.0| 400.9|  0.4|     -1.2| 21.9|\n|hp   |    4| 32| 146.7|  68.6|  123.0|   141.2|  77.1| 52.0| 335.0| 283.0|  0.7|     -0.1| 12.1|\n|drat |    5| 32|   3.6|   0.5|    3.7|     3.6|   0.7|  2.8|   4.9|   2.2|  0.3|     -0.7|  0.1|\n|wt   |    6| 32|   3.2|   1.0|    3.3|     3.2|   0.8|  1.5|   5.4|   3.9|  0.4|      0.0|  0.2|\n|qsec |    7| 32|  17.8|   1.8|   17.7|    17.8|   1.4| 14.5|  22.9|   8.4|  0.4|      0.3|  0.3|\n|vs   |    8| 32|   0.4|   0.5|    0.0|     0.4|   0.0|  0.0|   1.0|   1.0|  0.2|     -2.0|  0.1|\n|am   |    9| 32|   0.4|   0.5|    0.0|     0.4|   0.0|  0.0|   1.0|   1.0|  0.4|     -1.9|  0.1|\n|gear |   10| 32|   3.7|   0.7|    4.0|     3.6|   1.5|  3.0|   5.0|   2.0|  0.5|     -1.1|  0.1|\n|carb |   11| 32|   2.8|   1.6|    2.0|     2.7|   1.5|  1.0|   8.0|   7.0|  1.1|      1.3|  0.3|\n\n\n:::\n:::\n\n\n",
    "supporting": [
      "04-Tidyverse_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}